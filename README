mypass:

	A deterministic password generator. The purpose of this 
software is to help manage and generator brain passwords. The benefits
of a brain password is that you can recreate the conditions to generate
the same psuedo random passwords from memorizable information. However,
some of the downsides are that others could use the same conditions. To
help alleviate some of the downside, this program uses what I'd call 
user defined salt in addition to a hopefully unique entropy source or a
main password. 

	To use this software in a way in which it is designed, you 
start off by completing a questionaire. The answers are not stored but 
instead hashed into 16 bytes with the skein hash function. The 16 bytes
are stored in the database. This is what is called user salt. Then you 
enter a main password. This encrypts the database, and is used in 
generating passwords for aliases. An alias can be an email address or 
a website name. Any string up to 64 characters long. The alias 
concatonated with the user salt, the main password, and a deprecation 
counter are then hashed together to produce 48 byte hash. The hash is 
then converted to a string of printable characters. And this is the 
password generated by the alias.

	The information in the database is only the aliases, the user 
salt, and field information about the aliases. The field information 
can be used to tweak the output of the password. 

	For example You can set the length of the output password from 
1 character length, to 64 character length. Each character should 
contain 6 bits of entropy. 

	In addition to length, you can append up to 8 characters to the 
output. This could be useful if the password that is generated does not 
contain a character that you need to use to match a rule. Or it can be 
used to add more uniqueness to the output password. 

	Some characters can be problematic in certain settings, for 
example "!|>" can cause trouble if used on a command line. For this you 
can exclude characters from the output. Exlcusions can be a maximum of 
18 characters, and will replace the excluding characters with 
aplhabetic replacements. 

	If you like using this software as a password manager, you may
also import a password. The imported password may be up to 64 
characters long. This will then store that password in the database, 
and return it when you request a get for that alias. You cannot however
tweak the outputs of a stored password. Also, obviously the imported 
passwords are not deterministic and cannot be recreated by creating a 
new database.

	If you do use the field options to tweak a password, bear in 
mind that you will have to reenter those tweaks to regenerate the same
password. Using default fields, the same main password, and answering 
the questionaire will produce the same password for the same alias 
everytime. So, if you lose your database, you can recover.
